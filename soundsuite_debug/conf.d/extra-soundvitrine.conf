upstream rofl.fake {
    server 127.0.0.1;
}

# SoundVitrine front app (https://github.com/Amphaal/SoundVitrine)
server {
    #
    server_name localhost;
    listen 80;
    http2 on;

    try_files $uri $uri/ =404;

    # WS server
    location /sentry {
        # use Docker internal DNS + variable binding
        # (https://stackoverflow.com/a/54719226/3021058)
        # allows NGINX to not crash at startup if upstream is not available
        resolver 127.0.0.11 valid=30s;
        set $target "http://sound-sentry";
        proxy_set_header X-Forwarded-Host $host:$server_port;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass       $target;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";    
    }

    # redirect specific db folder
    location /data {
        proxy_pass http://rofl.fake/;
    }

    # redirect all basic trafic to /app 
    root /usr/share/nginx/html/extra_soundvitrine/app;

    #
    index index.php;

    #
    include /usr/share/nginx/html/extra_soundvitrine/app/nginx.conf;

    # reject access to any nginx config file
    location ~ nginx.conf$ {
        deny all;
    }
    
    ## make all .php files to be interpretable
    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param HTTP_PROXY ""; # prohibit httpoxy: https://httpoxy.org/
        fastcgi_pass php-fpm:9000;
    }
}

server {
    server_name rofl.fake;
    root /usr/share/nginx/html/extra_soundvitrine/_data;

    #
    location ~ \.json$ {
        expires 360s;
        add_header Pragma public;
        add_header Cache-Control "public";
    }

}
