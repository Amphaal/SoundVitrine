name: Publish Docker Image

on:
  push:
    branches:
     - main
    paths:
      - app/files/composer.json
      - .github/workflows/build-image.yml
  workflow_dispatch: # Allows manual triggering

permissions:
  contents: write # needed to push a release
  packages: write # Needed to push to GHCR

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} # GITHUB_TOKEN is automatically generated

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 
      - uses: actions/checkout@v4
      - name: Extract appVersion from Composer
        id: data-from-composer
        run: |
          APP_VERSION=$(jq -r '.version' app/files/composer.json)
          echo "appVersion=${APP_VERSION}" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/soundvitrine # Adjust image name if needed
          tags: |
            type=ref,event=branch
            type=raw,value=${{ steps.data-from-composer.outputs.appVersion }},enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=${{ github.ref_name }}-${{ steps.data-from-composer.outputs.appVersion }}
            type=raw,value=${{ steps.data-from-composer.outputs.appVersion }}-${{ github.ref_name }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./app
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # cache-from: type=gha
          # cache-to: type=gha,mode=max

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.data-from-composer.outputs.appVersion }}

